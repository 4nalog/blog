{"remainingRequest":"/Users/joshuacomeau/work/blog/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/joshuacomeau/work/blog/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/joshuacomeau/work/blog/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/joshuacomeau/work/blog/node_modules/docz-core/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/joshuacomeau/work/blog/src/pages/posts/folding-the-dom/index.mdx","dependencies":[{"path":"/Users/joshuacomeau/work/blog/src/pages/posts/folding-the-dom/index.mdx","mtime":1538912911405},{"path":"/Users/joshuacomeau/work/blog/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/joshuacomeau/work/blog/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/joshuacomeau/work/blog/src/pages/posts/folding-the-dom/index.mdx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { Spring } from 'react-spring';\nimport { State } from 'react-powerplug';\n\nvar _default = function _default(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"perspective\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Perspective\"), React.createElement(InlineCode, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"perspective\"), \" is a CSS property that controls the distance between the \\\"camera\\\" and the element. Elements much closer to the camera will have a much more dramatic effect when moving in 3D.\", React.createElement(SingleAxisDemo, {\n    defaultValue: 100,\n    id: \"fold-perspective\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, function (percentage) {\n    return React.createElement(Spring, {\n      to: {\n        percentage: percentage\n      },\n      config: {\n        tension: 60,\n        friction: 13\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, function (interpolated) {\n      return React.createElement(SingleFoldByRatio // The height of our node should be a fraction of the window height,\n      // but no larger than 500px\n      , {\n        height: Math.min(Math.round(window.innerHeight * 0.6), 500) // Our width is just 2/3rds of our height.\n        // Regrettably, because MDX doesn't support variables, I have to\n        // duplicate all that stuff:\n        ,\n        width: Math.min(Math.round(window.innerHeight * 0.6 * 0.666), 333),\n        percentage: interpolated.percentage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: autumnSrc,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    });\n  }));\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/joshuacomeau/work/blog/src/pages/posts/folding-the-dom/index.mdx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/joshuacomeau/work/blog/src/pages/posts/folding-the-dom/index.mdx"],"names":["React","MDXTag","Spring","State","components","props","percentage","tension","friction","interpolated","Math","min","round","window","innerHeight","autumnSrc","width"],"mappings":";;;;;;;;;;;;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAAQC,MAAR,QAAqB,cAArB;AACF,SAAQC,KAAR,QAAoB,iBAApB;;eAEe;AAAA,MAAEC,UAAF,QAAEA,UAAF;AAAA,MAAiBC,KAAjB;;AAAA,SAA4B,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAwB,IAAA,UAAU,EAAED,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,UAAU,EAAEA,UAA9B;AAA0C,IAAA,KAAK,EAAE;AAAC,YAAK;AAAN,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAD2C,EAE3C,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAF2C,uLAG3C,oBAAC,cAAD;AACE,IAAA,YAAY,EAAE,GADhB;AAEE,IAAA,EAAE,EAAC,kBAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,UAAAE,UAAU;AAAA,WACT,oBAAC,MAAD;AACE,MAAA,EAAE,EAAE;AAACA,QAAAA,UAAU,EAAVA;AAAD,OADN;AAEE,MAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE,EADH;AAENC,QAAAA,QAAQ,EAAE;AAFJ,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,UAAAC,YAAY;AAAA,aACX,oBAAC,iBAAD,CACE;AACA;AAFF;AAGE,QAAA,MAAM,EAAEC,IAAI,CAACC,GAAL,CACND,IAAI,CAACE,KAAL,CAAWC,MAAM,CAACC,WAAP,GAAqB,GAAhC,CADM,EAEN,GAFM,CAHV,CAOE;AACA;AACA;AATF;AAUE,QAAA,KAAK,EACHJ,IAAI,CAACC,GAAL,CACED,IAAI,CAACE,KAAL,CAAWC,MAAM,CAACC,WAAP,GAAqB,GAArB,GAA2B,KAAtC,CADF,EAEE,GAFF,CAXJ;AAgBE,QAAA,UAAU,EAAEL,YAAY,CAACH,UAhB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAkBE;AAAK,QAAA,GAAG,EAAES,SAAV;AAAqB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,CADW;AAAA,KAPf,CADS;AAAA,GAJb,CAH2C,CAA5B;AAAA,C;;AAAf","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import {Spring} from 'react-spring';\nimport {State} from 'react-powerplug';\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"perspective\"}}>{`Perspective`}</MDXTag>\n<InlineCode>perspective</InlineCode> is a CSS property that controls the distance between the \"camera\" and the element. Elements much closer to the camera will have a much more dramatic effect when moving in 3D.\n<SingleAxisDemo\n  defaultValue={100}\n  id=\"fold-perspective\"\n>\n  {percentage => (\n    <Spring\n      to={{percentage}}\n      config={{\n        tension: 60,\n        friction: 13,\n      }}\n    >\n      {interpolated => (\n        <SingleFoldByRatio\n          // The height of our node should be a fraction of the window height,\n          // but no larger than 500px\n          height={Math.min(\n            Math.round(window.innerHeight * 0.6),\n            500\n          )}\n          // Our width is just 2/3rds of our height.\n          // Regrettably, because MDX doesn't support variables, I have to\n          // duplicate all that stuff:\n          width={\n            Math.min(\n              Math.round(window.innerHeight * 0.6 * 0.666),\n              333\n            )\n          }\n          percentage={interpolated.percentage}\n        >\n          <img src={autumnSrc} style={{ width: '100%' }} />\n        </SingleFoldByRatio>\n      )}\n    </Spring>\n  )}\n</SingleAxisDemo></MDXTag>\n  "]}]}